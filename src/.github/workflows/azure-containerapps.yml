name: Build & Deploy to Azure Container Apps

on:
  push:
    branches: ["feature/mvp-api"]    # Change to 'main' after merging to the default branch
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  IMAGE_TAG: ${{ github.sha }}
  PORT: "3000"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

     # Sign in to Azure (using AZURE_CREDENTIALS)
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

     # Log in to ACR (using admin username/password; switch to a more secure approach later)
      - name: ACR Login
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username:     ${{ secrets.ACR_USERNAME }}
          password:     ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push image
        run: |
          docker build -f Dockerfile -t ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ env.IMAGE_TAG }} .
          docker push  ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update Container App to new image
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update \
              -g  ${{ secrets.AZ_RG }} \
              -n  ${{ secrets.AZ_CA_NAME }} \
              --image ${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ env.IMAGE_TAG }} \
              --set-env-vars PORT=${{ env.PORT }}
